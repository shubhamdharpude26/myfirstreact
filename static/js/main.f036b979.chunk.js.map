{"version":3,"sources":["Component/Square.js","Component/Restart.js","Component/Game.js","App.js","index.js"],"names":["Square","value","onClick","className","Restart","Game","useState","Array","fill","square","setSquare","isXNext","setIsXNext","winner","sqaure","possibleLines","i","length","a","b","c","calculateWinner","nextSymbol","renderSqaure","index","nextSquare","slice","isBoardFull","App","ReactDOM","render","document","getElementById"],"mappings":"uMAUeA,MARf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACvB,OACE,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KCEQG,MAPf,YAA+B,IAAZF,EAAW,EAAXA,QACjB,OACE,wBAAQC,UAAU,UAAUD,QAASA,EAArC,yBCqGWG,MAnGf,WACE,MAA4BC,mBAASC,MAAM,GAAGC,KAAK,OAAnD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EA8BN,SAAyBC,GAWvB,IAVA,IAAMC,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,CAC7C,kBAAkBD,EAAcC,GAAhC,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIX,EAAOS,IAAMT,EAAOS,KAAOT,EAAOU,IAAMV,EAAOS,KAAOT,EAAOW,GAC/D,OAAOX,EAAOS,GAGlB,OAAO,KA/CMG,GACTC,EAAaX,EAAU,IAAM,IAYnC,SAASY,EAAaC,GACpB,OACE,cAAC,EAAD,CACEvB,MAAOQ,EAAOe,GACdtB,QAAS,WACP,GAAqB,MAAjBO,EAAOe,IAA4B,MAAVX,EAA7B,CAGA,IAAMY,EAAahB,EAAOiB,QAC1BD,EAAWD,GAASF,EACpBZ,EAAUe,GACVb,GAAYD,OA6CpB,OACE,qBAAKR,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,YAAf,UACGoB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKpB,UAAU,YAAf,UACGoB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKpB,UAAU,YAAf,UACGoB,EAAa,GACbA,EAAa,GACbA,EAAa,SAGlB,qBAAKpB,UAAU,YAAf,SArFAU,EACK,UAAYA,EA6CvB,SAAqBC,GACnB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACjC,GAAiB,MAAbF,EAAOE,GAAY,OAAO,EAGhC,OAAO,EAjDIW,CAAYlB,GACd,QAEA,eAAiBa,IAiFtB,qBAAKnB,UAAU,iBAAf,SA9BF,cAAC,EAAD,CACED,QAAS,WACPQ,EAAUH,MAAM,GAAGC,KAAK,OACxBI,GAAW,c,MC3DNgB,MARf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,Q,MCFN0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f036b979.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square({ value, onClick }) {\r\n  return (\r\n    <button className=\"square\" onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","function Restart({ onClick }) {\r\n  return (\r\n    <button className=\"restart\" onClick={onClick}>\r\n      Play Again\r\n    </button>\r\n  );\r\n}\r\nexport default Restart;\r\n","import React, { useState } from \"react\";\r\nimport Square from \"./Square\";\r\nimport Restart from \"./Restart\";\r\n\r\nfunction Game() {\r\n  const [square, setSquare] = useState(Array(9).fill(null));\r\n  const [isXNext, setIsXNext] = useState(true);\r\n  const winner = calculateWinner(square);\r\n  const nextSymbol = isXNext ? \"X\" : \"O\";\r\n\r\n  function getStatus() {\r\n    if (winner) {\r\n      return \"Winner:\" + winner;\r\n    } else if (isBoardFull(square)) {\r\n      return \"Draw!\";\r\n    } else {\r\n      return \"Next player:\" + nextSymbol;\r\n    }\r\n  }\r\n\r\n  function renderSqaure(index) {\r\n    return (\r\n      <Square\r\n        value={square[index]}\r\n        onClick={() => {\r\n          if (square[index] != null || winner != null) {\r\n            return;\r\n          }\r\n          const nextSquare = square.slice();\r\n          nextSquare[index] = nextSymbol;\r\n          setSquare(nextSquare);\r\n          setIsXNext(!isXNext);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function calculateWinner(sqaure) {\r\n    const possibleLines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < possibleLines.length; i++) {\r\n      const [a, b, c] = possibleLines[i];\r\n      if (square[a] && square[a] === square[b] && square[a] === square[c]) {\r\n        return square[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function isBoardFull(sqaure) {\r\n    for (let i = 0; i < sqaure.length; i++) {\r\n      if (sqaure[i] == null) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function renderRestartButton() {\r\n    return (\r\n      <Restart\r\n        onClick={() => {\r\n          setSquare(Array(9).fill(null));\r\n          setIsXNext(true);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <div className=\"board-row\">\r\n            {renderSqaure(0)}\r\n            {renderSqaure(1)}\r\n            {renderSqaure(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {renderSqaure(3)}\r\n            {renderSqaure(4)}\r\n            {renderSqaure(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {renderSqaure(6)}\r\n            {renderSqaure(7)}\r\n            {renderSqaure(8)}\r\n          </div>\r\n        </div>\r\n        <div className=\"game-info\">{getStatus()}</div>\r\n        <div className=\"restart-button\">{renderRestartButton()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport Game from \"./Component/Game\";\r\nimport \"./App.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Tic Tac Toe</h1>\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}